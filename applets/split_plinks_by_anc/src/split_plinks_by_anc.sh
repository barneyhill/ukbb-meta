#!/bin/bash
# split_plinks_by_anc 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    echo "Value of Ancestry: '$anc'"
    echo "Value of QCd_pop_IDs: '$QCd_pop_IDs'"
    echo "Value of superpopulation: '$superpopulation'"
    echo "Value of plink_bed: '$plink_bed'"
    echo "Value of plink_bim: '$plink_bim'"
    echo "Value of plink_fam: '$plink_fam'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$QCd_pop_IDs" -o QCd_pop_IDs

    dx download "$superpopulation" -o superpopulation

    dx download "$plink_bed" -o plink_bed

    dx download "$plink_bim" -o plink_bim

    dx download "$plink_fam" -o plink_fam

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    mkdir -p ~/out/plink_bed
    mkdir -p ~/out/plink_bim
    mkdir -p ~/out/plink_fam
    mkdir -p ~/out/anc_sample_list
    mkdir -p ~/out/pheno_list
   
    ls -al
    
    python3 split_ancs.py --qced_sampled_id_file QCd_pop_IDs --superpopulation_file superpopulation --anc ${anc}

    paste ${anc}.txt ${anc}.txt > ${anc}_comb.txt    
    plink --bed plink_bed --bim plink_bim --fam plink_fam --keep ${anc}_comb.txt --no-fid --make-bed --out ${anc}_exome_subset

    mv *exome_subset.bed out/plink_bed/
    mv *exome_subset.bim out/plink_bim/         
    mv *exome_subset.fam out/plink_fam/
    mv *_comb.txt out/anc_sample_list/         
    mv *_pheno.txt out/pheno_list/ 
    dx-upload-all-outputs
    
}
