#!/bin/bash
# saige-step0 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    mkdir -p plink_files/

    dx download "$plink_bed" -o plink_files/plink_bed
    dx download "$plink_bim" -o plink_files/plink_bim
    dx download "$plink_fam" -o plink_files/plink_fam
    
    dx download "$GRM" -o GRM
    dx download "$GRM_samples" -o GRM_samples
    
    dx download "$pheno_list" -o pheno_list    

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.
    
    mkdir -p ~/out/model_file
    mkdir -p ~/out/variance_ratios

    ls -al  plink_files
    ls -al .

    dx download file-GGzB25jJg8Jzf3gQGxY0Jy4X # download saige-1.1.6.1.tar.gz from wes_450k/ukbb_meta/docker/
    
    docker load --input saige-1.1.6.1.tar.gz

    docker run -e cohort=$cohort -v ~/:/mnt/DNAnexus wzhou88/saige:1.1.6.1 step1_fitNULLGLMM.R --sparseGRMFile /mnt/DNAnexus/GRM \
                                                                             --sparseGRMSampleIDFile /mnt/DNAnexus/GRM_samples \
                                                                             --useSparseGRMtoFitNULL FALSE\
                                                                             --phenoFile /mnt/DNAnexus/pheno_list \
                                                                             --phenoCol=y_binary \
                                                                             --sampleIDColinphenoFile=IID \
                                                                             --useSparseGRMforVarRatio=TRUE  \
                                                                             --bedFile "/mnt/DNAnexus/plink_files/plink_bed" \
                                                                             --bimFile "/mnt/DNAnexus/plink_files/plink_bim" \
                                                                             --famFile "/mnt/DNAnexus/plink_files/plink_fam" \
                                                                             --outputPrefix /mnt/DNAnexus/${cohort} \
                                                                             --nThreads=$(nproc) \
                                                                             --traitType=binary
    
    mv *.rda out/model_file/
    mv *.varianceRatio.txt out/variance_ratios

    dx-upload-all-outputs
}
